package presentacion.visualizarCaptura;

import java.awt.event.*;

import presentacion.propiedadesVentana.CentrarVentana;
/**
 * Ventana que contiene las columnas de los paquetes y cuales son visualizados
 * en el programa. Permite activar y desactivar las columnas
 * 
 * @author Leonardo García & Jose Ramón Gutierrez
 * @version 2.0
 *  
 * @see TablePane
 */
public class FTableOptions extends javax.swing.JFrame {
	/** * Opción número de paquetes. */
	private  boolean numeropaquete;
	/** * Opción tiempo. */
	private  boolean time;
	/** * Opción MAC origen. */
	private  boolean macsource;
	/** * Opción MAC destino. */
	private  boolean macdest;
	/** * Opción  frame. */
	private  boolean frame;
	/** * Opción protocolo. */
	private  boolean protocol;
	/** * Opción IP origen. */
	private  boolean ipsrc;
	/** * Opción IP destino. */
	private  boolean ipdest;
	/** * Opción puerto origen. */
	private  boolean portsrc;
	/** * Opción puerto destino. */
	private  boolean portdest;
	/** * Opción secuencia. */
	private  boolean seq;
	/** * Opción ACK. */
	private  boolean ack;
	/** * Opción tamaño. */
	private  boolean length;
	/** * Opción tamaño total. */
	private  boolean size;
	/** * quien llamo a la clase. Tipo TablePane */
	public TablePane venpadre;

	/**
	 * Contructor por defecto de la clase
	 * 
	 * @param venpadre TablePane
	 */
	public FTableOptions(TablePane venpadre) {
		this.venpadre = venpadre;
		initComponents();
		new CentrarVentana(this);
	}
	

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	private void initComponents() {//GEN-BEGIN:initComponents
		jCheckBox1 = new javax.swing.JCheckBox();
		jCheckBox2 = new javax.swing.JCheckBox();
		jCheckBox3 = new javax.swing.JCheckBox();
		jCheckBox4 = new javax.swing.JCheckBox();
		jCheckBox5 = new javax.swing.JCheckBox();
		jCheckBox6 = new javax.swing.JCheckBox();
		jCheckBox7 = new javax.swing.JCheckBox();
		jCheckBox8 = new javax.swing.JCheckBox();
		jCheckBox9 = new javax.swing.JCheckBox();
		jCheckBox10 = new javax.swing.JCheckBox();
		jCheckBox11 = new javax.swing.JCheckBox();
		jCheckBox14 = new javax.swing.JCheckBox();
		jCheckBox13 = new javax.swing.JCheckBox();
		jCheckBox12 = new javax.swing.JCheckBox();
		jPanel1 = new javax.swing.JPanel();
		jPanel2 = new javax.swing.JPanel();
		jButton1 = new javax.swing.JButton();
		jButton2 = new javax.swing.JButton();
		
		numeropaquete=venpadre.getNumeropaquete();
		time=venpadre.getTime();
		macsource=venpadre.getMacsource();
		macdest=venpadre.getMacdest();
		frame=venpadre.getFrame();
		protocol=venpadre.getProtocol();
		ipsrc=venpadre.getIpsrc();
		ipdest=venpadre.getIpdest();
		portsrc=venpadre.getPortsrc();
		portdest=venpadre.getPortdest();
		seq=venpadre.getSeq();
		ack=venpadre.getAck();
		length=venpadre.getLength();
		size=venpadre.getSize();
		
		getContentPane().setLayout(new java.awt.GridLayout(8, 2));

		setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
		setTitle("Table Options");
		addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowClosing(java.awt.event.WindowEvent evt) {
				exitForm(evt);
			}
		});

		jCheckBox1.setSelected(numeropaquete);
		jCheckBox1.setText("n\u00ba");
		jCheckBox1.addItemListener(new java.awt.event.ItemListener() {
			public void itemStateChanged(java.awt.event.ItemEvent evt) {
				jCheckBox1ItemStateChanged(evt);
			}
		});

		getContentPane().add(jCheckBox1);

		jCheckBox2.setSelected(ipdest);
		jCheckBox2.setText("Add IP dest");
		jCheckBox2.addItemListener(new java.awt.event.ItemListener() {
			public void itemStateChanged(java.awt.event.ItemEvent evt) {
				jCheckBox2ItemStateChanged(evt);
			}
		});
		getContentPane().add(jCheckBox2);

		jCheckBox3.setSelected(time);
		jCheckBox3.setText("Time");
		jCheckBox3.addItemListener(new java.awt.event.ItemListener() {
			public void itemStateChanged(java.awt.event.ItemEvent evt) {
				jCheckBox3ItemStateChanged(evt);
			}
		});

		getContentPane().add(jCheckBox3);

		jCheckBox4.setSelected(portsrc);
		jCheckBox4.setText("Port Src");
		jCheckBox4.addItemListener(new java.awt.event.ItemListener() {
			public void itemStateChanged(java.awt.event.ItemEvent evt) {
				jCheckBox4ItemStateChanged(evt);
			}
		});

		getContentPane().add(jCheckBox4);

		jCheckBox5.setSelected(macsource);
		jCheckBox5.setText("MAC Source Adress");
		jCheckBox5.addItemListener(new java.awt.event.ItemListener() {
			public void itemStateChanged(java.awt.event.ItemEvent evt) {
				jCheckBox5ItemStateChanged(evt);
			}
		});
		getContentPane().add(jCheckBox5);

		jCheckBox6.setSelected(portdest);
		jCheckBox6.setText("Port dest");
		jCheckBox6.addItemListener(new java.awt.event.ItemListener() {
			public void itemStateChanged(java.awt.event.ItemEvent evt) {
				jCheckBox6ItemStateChanged(evt);
			}
		});
		getContentPane().add(jCheckBox6);

		jCheckBox7.setSelected(macdest);
		jCheckBox7.setText("MAC Dest Adress");
		jCheckBox7.addItemListener(new java.awt.event.ItemListener() {
			public void itemStateChanged(java.awt.event.ItemEvent evt) {
				jCheckBox7ItemStateChanged(evt);
			}
		});
		getContentPane().add(jCheckBox7);

		jCheckBox8.setSelected(seq);
		jCheckBox8.setText("SEQ");
		jCheckBox8.addItemListener(new java.awt.event.ItemListener() {
			public void itemStateChanged(java.awt.event.ItemEvent evt) {
				jCheckBox8ItemStateChanged(evt);
			}
		});
		getContentPane().add(jCheckBox8);

		jCheckBox9.setSelected(frame);
		jCheckBox9.setText("Frame");
		jCheckBox9.addItemListener(new java.awt.event.ItemListener() {
			public void itemStateChanged(java.awt.event.ItemEvent evt) {
				jCheckBox9ItemStateChanged(evt);
			}
		});
		getContentPane().add(jCheckBox9);

		jCheckBox10.setSelected(ack);
		jCheckBox10.setText("ACK");
		jCheckBox10.addItemListener(new java.awt.event.ItemListener() {
			public void itemStateChanged(java.awt.event.ItemEvent evt) {
				jCheckBox10ItemStateChanged(evt);
			}
		});
		getContentPane().add(jCheckBox10);

		jCheckBox11.setSelected(protocol);
		jCheckBox11.setText("Protocol");
		jCheckBox11.addItemListener(new java.awt.event.ItemListener() {
			public void itemStateChanged(java.awt.event.ItemEvent evt) {
				jCheckBox11ItemStateChanged(evt);
			}
		});
		getContentPane().add(jCheckBox11);

		jCheckBox12.setSelected(size);
		jCheckBox12.setText("Size");
		jCheckBox12.addItemListener(new java.awt.event.ItemListener() {
			public void itemStateChanged(java.awt.event.ItemEvent evt) {
				jCheckBox12ItemStateChanged(evt);
			}
		});
		getContentPane().add(jCheckBox12);

		jCheckBox13.setSelected(ipsrc);
		jCheckBox13.setText("Add IP scr");
		jCheckBox13.addItemListener(new java.awt.event.ItemListener() {
			public void itemStateChanged(java.awt.event.ItemEvent evt) {
				jCheckBox13ItemStateChanged(evt);
			}
		});
		getContentPane().add(jCheckBox13);


		jCheckBox14.setSelected(length);
		jCheckBox14.setText("Header Length");
		jCheckBox14.addItemListener(new java.awt.event.ItemListener() {
			public void itemStateChanged(java.awt.event.ItemEvent evt) {
				jCheckBox14ItemStateChanged(evt);
			}
		});
		getContentPane().add(jCheckBox14);
		
		getContentPane().add(jPanel1);

		jButton1.setText("Aceptar");
		jButton1.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton1ActionPerformed(evt);
			}
		});

		jPanel2.add(jButton1);

		jButton2.setText("Cancelar");
		jButton2.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton2ActionPerformed(evt);
			}
		});

		jPanel2.add(jButton2);

		getContentPane().add(jPanel2);

		pack();
	}//GEN-END:initComponents

	private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
		this.dispose();
	}//GEN-LAST:event_jButton2ActionPerformed

	private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
		opciones();
		this.dispose();
	}//GEN-LAST:event_jButton1ActionPerformed

	private void jCheckBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox1ItemStateChanged
		// Número de paquete

		if (evt.getStateChange() == ItemEvent.DESELECTED) {
			numeropaquete = false;
		} else {
			numeropaquete = true;
		}

	}//GEN-LAST:event_jCheckBox1ItemStateChanged
	private void jCheckBox2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox1ItemStateChanged
		// Número de paquete

		if (evt.getStateChange() == ItemEvent.DESELECTED) {
			ipdest = false;
		} else {
			ipdest = true;
		}

	}//GEN-LAST:event_jCheckBox1ItemStateChanged
	private void jCheckBox3ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox3ItemStateChanged
		// Size
		if (evt.getStateChange() == ItemEvent.DESELECTED) {
			time = false;
		} else {
			time = true;
		}
	}//GEN-LAST:event_jCheckBox3ItemStateChanged
	private void jCheckBox4ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox3ItemStateChanged
		// Size
		if (evt.getStateChange() == ItemEvent.DESELECTED) {
			portsrc = false;
		} else {
			portsrc = true;
		}
	}//GEN-LAST:event_jCheckBox3ItemStateChanged
	private void jCheckBox5ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox3ItemStateChanged
		// Size
		if (evt.getStateChange() == ItemEvent.DESELECTED) {
			macsource = false;
		} else {
			macsource = true;
		}
	}//GEN-LAST:event_jCheckBox3ItemStateChanged
	private void jCheckBox6ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox3ItemStateChanged
		// Size
		if (evt.getStateChange() == ItemEvent.DESELECTED) {
			portdest = false;
		} else {
			portdest = true;
		}
	}//GEN-LAST:event_jCheckBox3ItemStateChanged
	private void jCheckBox7ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox3ItemStateChanged
		// Size
		if (evt.getStateChange() == ItemEvent.DESELECTED) {
			macdest = false;
		} else {
			macdest = true;
		}
	}//GEN-LAST:event_jCheckBox3ItemStateChanged
	private void jCheckBox8ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox3ItemStateChanged
		// Size
		if (evt.getStateChange() == ItemEvent.DESELECTED) {
			seq = false;
		} else {
			seq = true;
		}
	}//GEN-LAST:event_jCheckBox3ItemStateChanged
	private void jCheckBox9ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox3ItemStateChanged
		// Size
		if (evt.getStateChange() == ItemEvent.DESELECTED) {
			frame = false;
		} else {
			frame = true;
		}
	}//GEN-LAST:event_jCheckBox3ItemStateChanged
	private void jCheckBox10ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox3ItemStateChanged
		// Size
		if (evt.getStateChange() == ItemEvent.DESELECTED) {
			ack = false;
		} else {
			ack = true;
		}
	}//GEN-LAST:event_jCheckBox3ItemStateChanged
	private void jCheckBox11ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox3ItemStateChanged
		// Size
		if (evt.getStateChange() == ItemEvent.DESELECTED) {
			protocol = false;
		} else {
			protocol = true;
		}
	}//GEN-LAST:event_jCheckBox3ItemStateChanged
	private void jCheckBox12ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox3ItemStateChanged
		// Size
		if (evt.getStateChange() == ItemEvent.DESELECTED) {
			size = false;
		} else {
			size = true;
		}
	}//GEN-LAST:event_jCheckBox3ItemStateChanged
	private void jCheckBox13ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox3ItemStateChanged
		// Size
		if (evt.getStateChange() == ItemEvent.DESELECTED) {
			ipsrc = false;
		} else {
			ipsrc = true;
		}
	}//GEN-LAST:event_jCheckBox3ItemStateChanged
	private void jCheckBox14ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox3ItemStateChanged
		// Size
		if (evt.getStateChange() == ItemEvent.DESELECTED) {
			length = false;
		} else {
			length = true;
		}
	}//GEN-LAST:event_jCheckBox3ItemStateChanged
	/**
	 * Establece en el padre (TablePane) las opciones establecidas.
	 */
	public void opciones() {
		venpadre.setColumnas(numeropaquete, time, macsource, macdest,
				frame, protocol, ipsrc, ipdest, portsrc, portdest, seq, ack,
				length, size);
		venpadre.viewColumns();
	}

	/** Exit the Application */
	private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
		dispose();
	}//GEN-LAST:event_exitForm

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton jButton1;

	private javax.swing.JButton jButton2;

	private javax.swing.JCheckBox jCheckBox1;

	private javax.swing.JCheckBox jCheckBox10;

	private javax.swing.JCheckBox jCheckBox11;

	private javax.swing.JCheckBox jCheckBox12;

	private javax.swing.JCheckBox jCheckBox13;

	private javax.swing.JCheckBox jCheckBox14;

	private javax.swing.JCheckBox jCheckBox2;

	private javax.swing.JCheckBox jCheckBox3;

	private javax.swing.JCheckBox jCheckBox4;

	private javax.swing.JCheckBox jCheckBox5;

	private javax.swing.JCheckBox jCheckBox6;

	private javax.swing.JCheckBox jCheckBox7;

	private javax.swing.JCheckBox jCheckBox8;

	private javax.swing.JCheckBox jCheckBox9;

	private javax.swing.JPanel jPanel1;

	private javax.swing.JPanel jPanel2;
	// End of variables declaration//GEN-END:variables

}