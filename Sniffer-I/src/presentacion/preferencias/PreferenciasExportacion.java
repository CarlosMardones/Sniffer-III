package presentacion.preferencias;


import java.awt.event.*;

import presentacion.Mediador;
import presentacion.comandos.*;
import presentacion.propiedadesVentana.CentrarVentana;
import presentacion.ventanaMenuSniffer.MenuSniffer;
/**
 *
 * @author  leonardo
 */
public class PreferenciasExportacion extends javax.swing.JDialog {
    
	/**
	 * Receptor del comando.
	 * 
	 * @see presentacion.Mediador
	 */
	Mediador mediador;
	
	/**
	 * Si es exportar o veer las preferencias
	 */
	private boolean tipo;
	/**
	 * Titulo de la ventana
	 */
	private String title;
	/**
	 * Comando encargado de elegir el origen.
	 * 
	 * @see presentacion.comandos.Comando
	 * @see presentacion.comandos.CBAbrirFichero
	 */
	private Comando jButtonOrigen; //CBAbrirFichero
	/**
	 * Comando encargado de elegir el destino
	 * 
	 * @see presentacion.comandos.Comando
	 * @see presentacion.comandos.CBGuardarFichero
	 */
	private Comando jButtonDestino; //CBGuardarFichero
	/**
	 * Comando encargado de abrir las preferencias guardadas
	 * 
	 * @see presentacion.comandos.Comando
	 * @see presentacion.comandos.CBAbrirFichero
	 */
	private Comando jButtonAbrir; //CBAbrirFichero
	/**
	 * Comando encargado de guardar las preferencias guardas
	 * 
	 * @see presentacion.comandos.Comando
	 * @see presentacion.comandos.CBGuardarFichero
	 */
	private Comando jButtonGuardar; //CBGuardarFichero
	/**
	 * Comando encargado de acpetar aceptar la exportacion
	 * 
	 * @see presentacion.comandos.Comando
	 * @see presentacion.comandos.CBAceptar
	 */
	private Comando jButtonAceptar; //CBAceptar
	
	/**
	 * Constructor por defecto de la clase.
	 *
	 */
    public PreferenciasExportacion() {
    	super(MenuSniffer.getFrames()[0], "Exportar desde fichero a XML", true);
		mediador = new Mediador();
        initComponents();
		this.setResizable(false);
		new CentrarVentana(this);
		this.setVisible(true);
    }
    
	/**
	 * Contructor de la clase que le estableces el receptro del comando 
	 * y si es para exportar o para mostrar las propopiedades
	 * 
	 * @param tipo es captura
	 * @param med receptor
	 */
    public PreferenciasExportacion(boolean tipo,Mediador med) {
    	super(MenuSniffer.getFrames()[0], "Exportar desde fichero a XML", true);
		mediador = med;
		this.tipo = tipo;
		if (tipo == true)
			title = "Exportar desde fichero a XML";
		else
			title = "Preferencias de Export";
        initComponents();
		this.setResizable(false);
		new CentrarVentana(this);
		//this.setVisible(true);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Código Generado  ">  
    private void initComponents() {
        buttonGroup1 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldOrigen = new javax.swing.JTextField();
         //jButtonOrigen = new javax.swing.JButton();
        jButtonOrigen = new CBAbrirFichero(mediador, "GenerarFromFileXML");
        jLabel2 = new javax.swing.JLabel();
        jTextFieldDestino = new javax.swing.JTextField();
        //jButtonDestino = new javax.swing.JButton();
        jButtonDestino = new CBGuardarFichero(mediador, "GenerarFromFileXML");
        jButtonCancelar = new javax.swing.JButton();
        //jButton3 = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        
        jButtonAbrir = new CBAbrirFichero(mediador, "GenerarFromFileXMLOpenXML");
        jButtonGuardar = new CBGuardarFichero(mediador, "GenerarFromFileXMLSaveXML");
        //jButtonAbrir = new CBAceptar(mediador, "GenerarXML");
        
		if (tipo){
			jButtonAceptar = new CBAceptar(mediador, "GenerarXML");
		}
		else{
			jButtonCancelar.setVisible(false);
			jButtonAceptar = new CBAceptar(mediador, "Salir");
		}
		
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
		setTitle(title);
        
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos"));
        jLabel1.setText("Origen: ");

        jLabel2.setText("Destino: ");
        
        jCheckBox1.setText("\u00danico fichero");
        jCheckBox1.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jCheckBox1.setMargin(new java.awt.Insets(0, 0, 0, 0));

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel1)
                            .add(jLabel2))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jTextFieldOrigen, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 189, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jTextFieldDestino, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 189, Short.MAX_VALUE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add((CBGuardarFichero)jButtonDestino, 0, 0, Short.MAX_VALUE)
                            .add((CBAbrirFichero)jButtonOrigen, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 31, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(jCheckBox1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 106, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add((CBAbrirFichero)jButtonOrigen)
                    .add(jTextFieldOrigen, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jTextFieldDestino, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel2)
                    .add((CBGuardarFichero)jButtonDestino))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 19, Short.MAX_VALUE)
                .add(jCheckBox1)
                .addContainerGap())
        );
        
        
        
            
/*        
        
        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel2)
                    .add(jLabel1))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                        .add(jTextFieldOrigen, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 189, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
	                    .add(jTextFieldDestino, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 189, Short.MAX_VALUE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add((CBGuardarFichero)jButtonDestino, 0, 0, Short.MAX_VALUE)
                    .add((CBAbrirFichero)jButtonOrigen, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 31, Short.MAX_VALUE))
					.add(jCheckBox1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 106, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add((CBAbrirFichero)jButtonOrigen)
                    .add(jTextFieldOrigen, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 19, Short.MAX_VALUE)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel2)
                    .add(jTextFieldDestino, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add((CBGuardarFichero)jButtonDestino))
					.add(jCheckBox1)
                .add(20, 20, 20))
        );



*/
        jButtonCancelar.setText("Cancelar");
        jButtonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarActionPerformed(evt);
            }
        });

        //jButton3.setText("Aceptar");
        /*jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        */
        
        

        
        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());        
        if (tipo == true){
        

        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(layout.createSequentialGroup()
                        .addContainerGap(161, Short.MAX_VALUE)
                        .add(jButtonCancelar)
                        .add(18, 18, 18)
                        .add((CBAceptar)jButtonAceptar))
                    .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jButtonCancelar)
                    .add((CBAceptar)jButtonAceptar))
                .addContainerGap())
        );
        }
        else {
        
       

      

        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap(164, Short.MAX_VALUE)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add((CBGuardarFichero)jButtonGuardar)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add((CBAbrirFichero)jButtonAbrir, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 74, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(jButtonCancelar)
                        .add(15, 15, 15)
                        .add((CBAceptar)jButtonAceptar)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add((CBAbrirFichero)jButtonAbrir)
                    .add((CBGuardarFichero)jButtonGuardar))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 14, Short.MAX_VALUE)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jButtonCancelar)
                    .add((CBAceptar)jButtonAceptar))
                .addContainerGap())
        );
        }
        pack();
    }// </editor-fold>                        

    /**
     * .
     * @param evt .
     */
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {                                         
// TODO: Agrege su codigo aqui:
        this.dispose();
    }                                        

    /**
     * .
     * @param evt .
     */
    private void jButtonCancelarActionPerformed(java.awt.event.ActionEvent evt) {                                                
// TODO: Agrege su codigo aqui:
        this.dispose();
    }                                               
    
    /**
     * .
     * @return .
     */
    public static String getOrigen(){
        return jTextFieldOrigen.getText();
    }
    
    /**
     * .
     * @param aux .
     */
    public static void setOrigen(String aux){
        jTextFieldOrigen.setText(aux);
    }
    
    /**
     * .
     * @return .
     */
    public static String getDestino(){
        return jTextFieldDestino.getText();
    }
    /**
     * .
     * @param aux .
     */
    public static void setDestino(String aux){
    	jTextFieldDestino.setText(aux);
    }
    
    /**
     * .
     * @return .
     */
    public static boolean getMultiFile(){
    	if (jCheckBox1.isSelected()) return false;
        else return true;
    }

    /**
     * . 
     * @param aux .
     */
    public static void setMultiFile(boolean aux){
    	if (aux == true) jCheckBox1.setSelected(false);
    	else jCheckBox1.setSelected(true);
    }
    
    
    // Declaración de varibales -no modificar                     
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    //private javax.swing.JButton jButton3;
    private javax.swing.JButton jButtonCancelar;
    //private javax.swing.JButton jButtonDestino;
    //private javax.swing.JButton jButtonOrigen;
    //private javax.swing.JButton jButtonAbrir;
    //private javax.swing.JButton jButtonGuardar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private static javax.swing.JTextField jTextFieldDestino;
    private static javax.swing.JTextField jTextFieldOrigen;
    private static javax.swing.JCheckBox jCheckBox1;
    // Fin de declaración de variables                   
    
}
